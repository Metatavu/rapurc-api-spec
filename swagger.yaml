openapi: 3.0.3
info:
  version: 1.0.0
  title: Rapurc API-spec

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/surveys:
    get:
      operationId: listSurveys
      summary: List surveys.
      description: Lists surveys.
      tags:
        - Surveys
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          required: false
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          required: false
          schema:
            type: integer
        - name: address
          in: query
          description: Filter by address
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by survey status
          required: false
          schema:
            $ref: "#/components/schemas/SurveyStatus"
      responses:
        "200":
          description: List of surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Survey"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of surveys with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSurvey
      summary: Create a survey.
      description: Creates a new survey.
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/surveys/{surveyId}":
    get:
      operationId: findSurvey
      summary: Find a survey.
      description: Finds a survey by id.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSurvey
      summary: Update a survey.
      description: Updates a survey
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSurvey
      summary: Delete a survey.
      description: Deletes a survey.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Survey:
      type: object
      description: Survey object
      required:
        - status
      properties:
        id:
          type: string
          format: uuid
          description: ID of the survey
          readOnly: true
        status:
          $ref: "#/components/schemas/SurveyStatus"
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    SurveyStatus:
      type: string
      description: Survey status enum
      enum:
        - DRAFT
        - DONE

    OwnerInformation:
      type: object
      description: Information about the owner of the building
      required:
        - surveyId
        - name
        - legalName
      properties:
        id:
          type: string
          format: uuid
          description: Id of the building information object
          readOnly: true
        surveyId:
          type: string
          format: uuid
          description: Id of the survey
        name:
          type: string
          description: Name
        legalName:
          type: string
          description: Official name

    BuildingInformation:
      type: object
      description: Information about the building
      required:
        - surveyId
        - streetAddress
        - city
        - postCode
      properties:
        id:
          type: string
          format: uuid
          description: Id of the building information object
          readOnly: true
        surveyId:
          type: string
          format: uuid
          description: Id of the survey
        propertyId:
          type: string
          description: Property id
        buildingId:
          type: string
          description: Building id
        buildingType:
          type: string
          description: Building type
        constructionYear:
          type: number
          description: Construction year
        space:
          type: number
          description: Space of the building in square meters
        volume:
          type: number
          description: Volume of the building in qubic meters
        floors:
          type: number
          description: Number of floors
        basements:
          type: number
          description: Number of basements
        basementMaterial:
          type: string
          description: Material of basement
        supportinStructure:
          type: string
          description: Supporting structure
        facadeMaterial:
          type: string
          description: Facade material
        roofType:
          type: string
          description: Roof type
        streetAddress:
          type: string
          description: Street address
        city:
          type: string
          description: City
        postCode:
          type: number
          description: Post code

    InterviewInformation:
      type: object
      description: Interviews information
      required:
        - surveyId
      properties:
        id:
          type: string
          format: uuid
          description: Id of the interview information object
          readOnly: true
        surveyId:
          type: string
          format: uuid
          description: Id of the survey
        demolititionType:
          type: string
          description: Extent of demolition
        startDate:
          type: string
          description: date
        endDate:
          type: string
          description: date
        interviews:
          type: array
          items:
            $ref: "#/components/schemas/Interview"

    Interview:
      type: object
      description: Interview
      required:
        - interviewId
        - company
        - name
        - email
        - phoneNumber
        - reportDay
      properties:
        id:
          type: string
          format: uuid
          description: Id of the interview
          readOnly: true
        interviewId:
          type: string
          format: uuid
          description: Id of the interview information
        name:
          type: string
          description: Name
        sukunimi:
          type: string
          description: Second name
        company:
          type: string
          description: Company name
        jobTitle:
          type: string
          description: Title in the company
        phoneNumber:
          type: string
          description: Contact phone number
        email:
          type: string
          description: Contact email address
        reportDay:
          type: date
          description: Date of interview
