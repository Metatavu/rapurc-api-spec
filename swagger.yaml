openapi: 3.0.3
info:
  version: 1.0.0
  title: Rapurc API-spec

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/surveys:
    get:
      operationId: listSurveys
      summary: List surveys.
      description: Lists surveys.
      tags:
        - Surveys
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          required: false
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          required: false
          schema:
            type: integer
        - name: address
          in: query
          description: Filter by address
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by survey status
          required: false
          schema:
            $ref: "#/components/schemas/SurveyStatus"
      responses:
        "200":
          description: List of surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Survey"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of surveys with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSurvey
      summary: Create a survey.
      description: Creates a new survey.
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/surveys/{surveyId}":
    get:
      operationId: findSurvey
      summary: Find a survey.
      description: Finds a survey by id.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSurvey
      summary: Update a survey.
      description: Updates a survey
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSurvey
      summary: Delete a survey.
      description: Deletes a survey.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/surveys/{surveyId}/owners:
    get:
      operationId: listOwnerInformation
      summary: List owner information.
      description: Lists owner information.
      tags:
        - Owners
      parameters:
        - name: surveyId
          in: path
          description: Survey Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of owner information data of the survey
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OwnerInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createOwnerInformation
      summary: Create a new owner information object.
      description: Creates a new owner information object.
      tags:
        - Owners
      parameters:
        - name: surveyId
          in: path
          description: Survey Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInformation"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Owner Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/surveys/{surveyId}/owners/{ownerId}:
    get:
      operationId: findOwnerInformation
      summary: Find owner information.
      description: Finds owner information by id.
      tags:
        - Owners
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: ownerId
          required: true
          in: path
          description: owner information id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Owner information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateOwnerInformation
      summary: Update owner information object.
      description: Updates owner information object.
      tags:
        - Owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInformation"
        description: Payload
        required: true
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: ownerId
          required: true
          in: path
          description: owner Id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Owner Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteOwnerInformation
      summary: Delete owner information.
      description: Deletes owner information.
      tags:
        - Owners
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: ownerId
          required: true
          in: path
          description: owner Id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/surveys/{surveyId}/buildings:
    get:
      operationId: listBuildingInformation
      summary: List building information.
      description: Lists building information.
      tags:
        - Buildings
      parameters:
        - name: surveyId
          in: path
          description: Survey Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of building information data of the survey
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BuildingInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createBuildingInformation
      summary: Create a new building information object.
      description: Creates a new building information object.
      tags:
        - Buildings
      parameters:
        - name: surveyId
          in: path
          description: Survey Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildingInformation"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Building Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildingInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/surveys/{surveyId}/buildings/{buildingId}:
    get:
      operationId: findBuildingInformation
      summary: Find building information.
      description: Finds building information by id.
      tags:
        - Buildings
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: buildingId
          required: true
          in: path
          description: Building information id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Building information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildingInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateBuildingInformation
      summary: Update building information object.
      description: Updates building information object.
      tags:
        - Buildings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildingInformation"
        description: Payload
        required: true
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: buildingId
          required: true
          in: path
          description: building Id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Building Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildingInformation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteBuildingInformation
      summary: Delete building information.
      description: Deletes building information.
      tags:
        - Buildings
      parameters:
        - name: surveyId
          required: true
          in: path
          description: survey id
          schema:
            type: string
            format: uuid
        - name: buildingId
          required: true
          in: path
          description: building Id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Survey:
      type: object
      description: Survey object
      required:
        - status
      properties:
        id:
          type: string
          format: uuid
          description: ID of the survey
          readOnly: true
        status:
          $ref: "#/components/schemas/SurveyStatus"
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    SurveyStatus:
      type: string
      description: Survey status enum
      enum:
        - DRAFT
        - DONE

    OwnerInformation:
      type: object
      description: Information about the owner of the building
      required:
        - surveyId
      properties:
        id:
          type: string
          format: uuid
          description: Id of the building information object
          readOnly: true
        surveyId:
          type: string
          format: uuid
          description: Id of the survey
        ownerName:
          type: string
          description: Name of the owner
        businessId:
          type: string
          description: Business ID
        contactPerson:
          $ref: "#/components/schemas/ContactPerson"
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ContactPerson:
      type: object
      description: Building owner contact person object
      properties:
        firstName:
          type: string
          description: Contact persons first name
        LastName:
          type: string
          description: Contact persons last name
        phone:
          type: string
          description: Contact persons phone number
        email:
          type: string
          format: email
          description: Contact persons email
        profession:
          type: string
          description: Contact persons profession

    BuildingInformation:
      type: object
      description: Information about the building
      required:
        - surveyId
      properties:
        id:
          type: string
          format: uuid
          description: Id of the building information object
          readOnly: true
        surveyId:
          type: string
          format: uuid
          description: Id of the survey
        propertyId:
          type: string
          description: Property id
        buildingId:
          type: string
          description: Building id
        buildingType:
          type: string
          description: Building type
        constructionYear:
          type: integer
          format: int32
          description: Construction year
        space:
          type: number
          description: Space of the building in square meters
        volume:
          type: number
          description: Volume of the building in qubic meters
        floors:
          type: number
          description: Number of floors
        basements:
          type: number
          description: Number of basements
        foundation:
          type: string
          description: Material of foundation
        supportinStructure:
          type: string
          description: Supporting structure
        facadeMaterial:
          type: string
          description: Facade material
        roofType:
          type: string
          description: Roof type
        address:
          $ref: "#/components/schemas/Address"
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    Address:
      type: object
      description: Address of the building
      properties:
        streetAddress:
          type: string
          description: Street address
        city:
          type: string
          description: City
        postCode:
          type: string
          description: Post code